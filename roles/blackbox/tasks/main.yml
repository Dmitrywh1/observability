- name: Ensure the system group is present
  group:
    name: "{{ service.group }}"
    system: yes
    state: present

- name: Ensure the system user exists
  user:
    name: "{{ service.name }}"
    shell: /sbin/nologin
    system: yes
    group: "{{ service.group }}"

- name: Copy binaries
  copy:
    src: "{{ item }}"
    dest: /usr/local/bin
    owner: "{{ service.name }}"
    group: "{{ service.group }}"
    mode: 755
  loop:
    - "files/{{ service.bin_name }}"

- name: Ensure service config dir is created
  file:
    path: "{{ service.config_dir }}"
    state: directory
    owner: "{{ service.name }}"
    group: "{{ service.group }}"
    mode: 755

- name: Copy service config
  copy:
    src: "{{ item }}"
    dest: /etc/systemd/system
  loop:
    - "files/{{ service.unit_name }}.service"
  notify: Restart systemd

- name: Start and enable service
  ansible.builtin.systemd:
    name: "{{ service.unit_name }}"
    state: started
    enabled: true

- name: Copy library and config
  copy:
    src: "{{ item }}"
    dest: "{{ service.config_dir }}"
    owner: "{{ service.name }}"
    group: "{{ service.group }}"
  loop:
    - "files/{{ service.name }}.yml"

- name: Ensure service is started and enabled
  become: true
  ansible.builtin.systemd:
    daemon_reload: true
    name: "{{ service.name }}"
    state: started
    enabled: true

- name: Ensure service is running
  ansible.builtin.uri:
    url: "{{ service.addr }}"
    method: GET
    return_content: yes
  register: "up_check"
  until: up_check.status == 200
  retries: 5
  delay: 10
